name: Build and test

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

env:
  PLATFORMS: linux/amd64, linux/arm64

jobs:
  gogitops:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: GoGitOps Step
      id: gogitops
      uses: beaujr/gogitops-action@v0.2
      with:
        github-actions-token: ${{secrets.GITHUB_TOKEN}}
  build:
    runs-on: ubuntu-latest
    needs: gogitops
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Get
      run: go get -v ./...

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
  # test-deploy-argocd-old:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       argocd_version:
  #         - "2.5.5"
  #         - "2.4.18"
  #     fail-fast: true
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: AbsaOSS/k3d-action@v2
  #       name: "Create single k3d Cluster and run Argocd/Lovely"
  #       with:
  #         cluster-name: test-cluster-1
  #         args: >-
  #           --agents 3
  #           --no-lb
  #           --k3s-arg "--no-deploy=traefik,servicelb,metrics-server@server:*"
  #     - name: "Deploy Argocd/Lovely"
  #       run: |
  #         docker build . -t argocd-lovely-plugin/testing:latest
  #         k3d image import argocd-lovely-plugin/testing:latest -c test-cluster-1 --verbose
  #         kubectl apply -k .github/workflows/assets/bootstrap/argocd-${{ matrix.argocd_version }}
  #         kubectl -n argocd rollout status statefulset/argocd-application-controller
  #         kubectl -n argocd rollout status deployment/argocd-repo-server
  #         kubectl -n argocd apply -f .github/workflows/assets/applications/helm_only_in_kustomize.yml
  #         kubectl -n argocd apply -f .github/workflows/assets/applications/helm_plus_additions.yml
  #     - name: "Test helmonlyinkustomize"
  #       run: |
  #         kubectl config use-context k3d-test-cluster-1
  #         sleep 30
  #         kubectl -n helmonlyinkustomize rollout status deployment/test-hello-world
  #         kubectl -n helmonlyinkustomize describe pod -l=app.kubernetes.io/name=hello-world
  #         kubectl -n helmonlyinkustomize logs -l=app.kubernetes.io/name=hello-world
  #     - name: "Test helmplusadditions"
  #       run: |
  #         kubectl config use-context k3d-test-cluster-1
  #         kubectl -n helmplusadditions rollout status deployment/helmplusadditions-hello-world
  #         kubectl -n helmplusadditions describe pod -l=app.kubernetes.io/name=hello-world
  #         kubectl -n helmplusadditions logs -l=app.kubernetes.io/name=hello-world
  #         kubectl -n helmplusadditions get secrets mysecret
  #         kubectl -n helmplusadditions get configmaps index.html-g9575k5952
  build-ci-lovely:
    runs-on: ubuntu-latest
    needs: build
      steps:
      - uses: actions/checkout@v3
      - name: "build-lovely-container"
        run: |
          docker build -f Dockerfile -t k3d-registry.localhost:5000/lovely .
          mkdir -p /tmp/lovely-cmp
          docker save k3d-registry.localhost:5000/lovely > /tmp/lovely-cmp/lovely-cmp.tar
      - name: Temporarily save Docker image
        uses: actions/upload-artifact@v2
        with:
          name: lovely-cmp-docker
          path: /tmp/lovely-cmp
          retention-days: 1

  test-deploy-argocd-cmp-sidecar:
    runs-on: ubuntu-latest
    needs: build-ci-lovely
    strategy:
      matrix:
        argocd_version:
          - "2.6.0-rc3"
          - "2.5.6"
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      - name: Retrieve saved Docker image
        uses: actions/download-artifact@v2
        with:
          name: lovely-cmp-docker
          path: /tmp/lovely-cmp
      - uses: AbsaOSS/k3d-action@v2
        name: "Create single k3d Cluster and run Argocd/Lovely"
        with:
          cluster-name: lovely
          args: >-
            --config=.github/workflows/k3d.conf
      - name: "Deploy Argocd/Lovely"
        run: |
          cd /tmp/lovely-cmp
          docker load < lovely-cmp.tar
          docker push k3d-registry.localhost:5000/lovely
          kubectl apply -k .github/workflows/assets/bootstrap/argocd-cmp-${{ matrix.argocd_version }}
          kubectl -n argocd rollout status statefulset/argocd-application-controller
          kubectl -n argocd rollout status deployment/argocd-repo-server
          kubectl -n argocd apply -f .github/workflows/assets/applications/cmp-helm_only_in_kustomize.yml
          kubectl -n argocd apply -f .github/workflows/assets/applications/cmp-helm_plus_additions.yml
      - name: "Test helmonlyinkustomize"
        run: |
          kubectl config use-context k3d-lovely
          sleep 30
          kubectl -n helmonlyinkustomize rollout status deployment/test-hello-world
          kubectl -n helmonlyinkustomize describe pod -l=app.kubernetes.io/name=hello-world
          kubectl -n helmonlyinkustomize logs -l=app.kubernetes.io/name=hello-world
      - name: "Test helmplusadditions"
        run: |
          kubectl config use-context k3d-lovely
          kubectl -n helmplusadditions rollout status deployment/helmplusadditions-hello-world
          kubectl -n helmplusadditions describe pod -l=app.kubernetes.io/name=hello-world
          kubectl -n helmplusadditions logs -l=app.kubernetes.io/name=hello-world
          kubectl -n helmplusadditions get secrets mysecret
          kubectl -n helmplusadditions get configmaps index.html-g9575k5952
      - name: delete-artifact
        uses: geekyeggo/delete-artifact@v2
        with:
            name: lovely-cmp-docker
  push_to_registry:
    name: Push Docker image to GitHub Packages
    needs: [test-deploy-argocd-cmp-sidecar]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build CMP image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: ${{ env.PLATFORMS }}
          tags: ghcr.io/crumbhole/argocd-lovely-plugin-cmp:${{ github.sha }}
          build-args: VERSION=${{ github.sha }}
      - name: Build and Push legacy image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.legacy
          push: true
          platforms:
          tags: ghcr.io/crumbhole/argocd-lovely-plugin:${{ github.sha }}
          build-args: VERSION=${{ github.sha }}
      - name: Build CMP image with vault
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.cmp-vault
          push: true
          platforms: ${{ env.PLATFORMS }}
          tags: ghcr.io/crumbhole/argocd-lovely-plugin-cmp-vault:${{ github.sha }}
          build-args: VERSION=${{ github.sha }}
